[project]
name = "svaha-mini"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10.14"
dependencies = [
    "aio-pika>=9.5.4",
    "aioboto3>=13.3.0",
    "aioredis>=2.0.1",
    "fastapi>=0.115.6",
    "orjson>=3.10.14",
    "pydantic-settings>=2.7.1",
    "python-multipart>=0.0.20",
    "structlog>=24.4.0",
    "tenacity>=9.0.0",
    "ulid-py>=1.1.0",
    "uvicorn[standard]>=0.34.0",
]

[dependency-groups]
dev = [
    "black>=24.10.0",
    "httpx>=0.28.1",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "ruff>=0.9.0",
]

[tool.black]
skip-string-normalization = false
line-length = 120
#extend-ignore = "E203"  # todo It's not working. Fix it by adding E203 and preview=true to the Ruff


[tool.ruff]
line-length = 120
preview = true

[tool.ruff.lint]
ignore = [
    "ANN101", # Missing type annotation for self in a class method
    "ANN102", # Missing type annotation for cls in a classmethod
    "C408", # Unnecessary `dict` call
    "PLR2004", # Magic value used in comparison
    "RET504", # Unnecessary variable assignment before `return` statement
    "RUF002", # Docstring contains ambiguous unicode character
    "RUF003", # Comment contains ambiguous unicode character
#    "UP006", # Use `list` instead of `List` for type annotations
#    "UP007"  # Use `X | Y` for type annotations
]
select = [
#    "D",   # pydocstyle
    "F", # Pyflakes
    "I", # isort
    "N", # pep8-naming
    "RUF", # Ruff-specific rules
    "UP", # pyupgrade
    # pycodestyle    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    # flake8    "A", # flake8-builtins
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "C", # flake8-comprehensions
    "C4", # flake8-comprehensions
#     "DTZ", # flake8-datetimez TODO: Enable me
    "EM", # flake8-errmsg
#     "FBT", # flake8-boolean-trap
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RET", # flake8-return
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "T20", # flake8-print
    "TID", # flake8-tidy-imports
    "YTT", # flake8-2020
    # "ERA", # eradicate    "PD", # pandas-vet
    "PGH", # pygrep-hooks
    # Pylint    "PLC",
    "PLE",
    "PLR",
    "PLW",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
force-single-line = false
known-first-party = [""]
order-by-type = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.flake8-quotes]
#docstring-quotes = "single"
inline-quotes = "single"
#multiline-quotes = "single"

# Test
# black --diff --color .
# ruff check --diff . | colordiff

# Fix
# black .
# ruff check --fix .


# Test
# rye add --dev pytest
# rye test

# Run
# uvicorn --reload --host $HOST --port $PORT --log-level $LOG_LEVEL --log-config log_config.json
